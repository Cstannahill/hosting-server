version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: []

  db:
    image: postgres:16
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=infra
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mongo:
    image: mongo:6
    container_name: mongo
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - loki

  backup_scheduler:
    build: ./services/backup_scheduler
    container_name: backup_scheduler
    depends_on:
      - db
    volumes:
      - db_data:/db_data:ro
      - ./backups:/app/backups
    environment:
      - PGHOST=db
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD:-postgres}
      - PGDATABASE=${PGDATABASE:-postgres}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_DIR=/app/backups

  webhook_handler:
    build: ./services/webhook_handler
    container_name: webhook_handler
    ports:
      - "9000:9000"
    volumes:
      - ./scripts:/app/scripts:ro
    environment:
      - WEBHOOK_PORT=9000
      - WEBHOOK_SECRET=${WEBHOOK_SECRET:-secret}
      - ACTION_SCRIPT=/app/scripts/deploy.sh

  healthcheck_dashboard:
    build: ./services/healthcheck_dashboard
    container_name: healthcheck_dashboard
    ports:
      - "9100:9100"
    environment:
      - DASHBOARD_PORT=9100
      - CHECK_ENDPOINTS=web:http://web:3000/,api:http://api:8000/health
      - CHECK_INTERVAL_SECS=10

  static_file_proxy:
    build: ./services/static_file_proxy
    container_name: static_file_proxy
    ports:
      - "9200:8080"
    volumes:
      - ./public:/app/public:ro
    environment:
      - STATIC_ROOT=/app/public
      - PROXY_MODE=off
      - PROXY_TARGET=http://api:8000
      - CONFIG_PATH=/app/config.toml

  metrics_exporter:
    build: ./services/metrics_exporter
    container_name: metrics_exporter
    ports:
      - "9300:9300"
    environment:
      - METRICS_CONFIG=/app/config.toml
      - EXPORTER_PORT=9300

      - PROXY_PORT=8080

  go_job_queue:
    build: ./services/go_job_queue
    container_name: go_job_queue
    ports:
      - "9001:9000"
    environment:
      - PORT=9000

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

  data_capture:
    build: ./services/data_capture
    container_name: data_capture
    depends_on:
      - metrics_exporter
      - ollama
    volumes:
      - ./data:/data
    environment:
      - SQLITE_PATH=/data/metrics.sqlite
      - CHROMA_PATH=/data/chroma
      - METRICS_URL=http://metrics_exporter:9300/metrics
      - CAPTURE_INTERVAL_SECS=60
      - CHROMA_COLLECTION=metrics
      - OLLAMA_HOST=http://ollama:11434

  mongo_backup:
    build: ./services/mongo_backup
    container_name: mongo_backup
    depends_on:
      - mongo
    volumes:
      - ./backups:/app/backups
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - BACKUP_DIR=/app/backups
      - BACKUP_SCHEDULE=0 3 * * *

  ws_broadcast:
    build: ./services/ws_broadcast
    container_name: ws_broadcast
    ports:
      - "9400:9400"
    environment:
      - WS_PORT=9400

  deployment_api:
    build: ./services/deployment_api
    container_name: deployment_api
    volumes:
      - .:/repo
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REGISTRY_PATH=/repo/compose/app-registry
    ports:
      - "9500:8080"


volumes:
  db_data:
  ollama_data:
  mongo_data:
