version: "3.8"

services:
  web:
    build: ./apps/web
    container_name: web
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${VITE_API_URL:-/api}

  api:
    build: ./apps/api
    container_name: api
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - ENV=${ENV:-Development}

  db:
    image: postgres:16
    container_name: db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - web
      - api

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - loki

  backup_scheduler:
    build: ./services/backup_scheduler
    container_name: backup_scheduler
    depends_on:
      - db
    volumes:
      - db_data:/db_data:ro
      - ./backups:/app/backups
    environment:
      - PGHOST=db
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD:-postgres}
      - PGDATABASE=${PGDATABASE:-postgres}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_DIR=/app/backups

  webhook_handler:
    build: ./services/webhook_handler
    container_name: webhook_handler
    ports:
      - "9000:9000"
    volumes:
      - ./scripts:/app/scripts:ro
    environment:
      - WEBHOOK_PORT=9000
      - WEBHOOK_SECRET=${WEBHOOK_SECRET:-secret}
      - ACTION_SCRIPT=/app/scripts/deploy.sh

  healthcheck_dashboard:
    build: ./services/healthcheck_dashboard
    container_name: healthcheck_dashboard
    ports:
      - "9100:9100"
    environment:
      - DASHBOARD_PORT=9100
      - CHECK_ENDPOINTS=web:http://web:3000/,api:http://api:8000/health
      - CHECK_INTERVAL_SECS=10

volumes:
  db_data:
